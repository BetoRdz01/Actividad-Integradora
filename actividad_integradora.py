# -*- coding: utf-8 -*-
"""Actividad_Integradora.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ae6Qjxp9LrdofymdySS3ySJ4NDc6-GxK
"""

import pandas as pd
import streamlit as st
import numpy as np
# import plotly as px
# import plotly.figure_factory as ff
# from bokeh.plotting import figure
# import matplotlib.pyplot as plt

st.set_page_config(layout='wide', initial_sidebar_state='expanded')

df = pd.read_csv('Police_Department_Incident_Reports__2018_to_Present.csv')
st.title('Police Incident Reports from 2018 to 2020 in San Francisco.')
st.markdown('The data shon below belongs to incident reports in the city of San Francisco, from the year 2018 to 2020, with details from each case sucha as date, day of the week, police district, neighborhood in which it happened, type of incident in category and subcategory, exact location and resolution.')
# st.dataframe(df)

#Renombramos columnas
df= df.rename(columns={'Latitude' : 'lat', 'Longitude': 'lon'})
df = df.dropna(subset=['lat', 'lon'])

# DF Mapa
mapa = pd.DataFrame()
mapa['Date']= df['Incident Date']
mapa['Day'] = df['Incident Day of Week']
mapa['Police District']=df['Police District']
mapa['Neighborhood']=df['Analysis Neighborhood']
mapa['Incident Category']=df['Incident Category']
mapa['Incident Subcategory']=df['Incident Subcategory']
mapa['Resolution']=df['Resolution']
mapa['lat']=df['lat']
mapa['lon']=df['lon']
mapa['Incident Year'] = df['Incident Year'].astype(int)

mapa=mapa.dropna()

#Importamos imagen al sidebar
from PIL import Image

def add_logo(logo_path):
    """Read and return a logo"""
    logo = Image.open(logo_path)
    return logo

tec = add_logo(logo_path=(r"C:\Users\Alberto\Desktop\TEC\Semestre_6\Analitica_de_datos_y_herramientas_de_inteligencia_artificial\Parte_3\ActividadIntegradora\tec.png"))
st.sidebar.image(tec, use_column_width=True)
st.sidebar.title('Actividad Integradora')
st.sidebar.subheader('Alberto Rodríguez Porras | A01721497')

subset_data2 = mapa
police_district_input = st.sidebar.multiselect(
'Police District',
mapa.groupby('Police District').count().reset_index()['Police District'].tolist())
if len(police_district_input) > 0:
    subset_data2 = mapa[mapa['Police District'].isin(police_district_input)]

subset_data1 = subset_data2
neighborhood_input = st.sidebar.multiselect(
'Neighborhood',
subset_data2.groupby('Neighborhood').count().reset_index()['Neighborhood'].tolist())
if len(neighborhood_input) > 0:
    subset_data1 = subset_data2[subset_data2['Neighborhood'].isin(neighborhood_input)]

subset_data = subset_data1
incident_input = st.sidebar.multiselect(
'Incident Category',
subset_data1.groupby('Incident Category').count().reset_index()['Incident Category'].tolist())
if len(incident_input) > 0:
    subset_data = subset_data1[subset_data1['Incident Category'].isin(incident_input)]

subset_data3 = subset_data
incident_year_input = st.sidebar.slider(
'Incident Year',min_value=2018, max_value=2020)
# subset_data3.groupby('Incident Year').count().reset_index()['Incident Year'].tolist()
if incident_year_input > 0:
    subset_data3 = subset_data3[subset_data3['Incident Year']==incident_year_input]

st.map(subset_data3)

# Datos por año
a2018 = mapa[mapa['Incident Year']==2018]
a2019 = mapa[mapa['Incident Year']==2019]
a2020 = mapa[mapa['Incident Year']==2020]

# Crimenes por días de la semana por año
from pandas.api.types import CategoricalDtype
week18 = a2018['Day'].value_counts()
week18=pd.DataFrame(week18)
week18['Day of Week'] = week18.index
week18=week18.rename(columns = {'Day':'2018'})
days = CategoricalDtype(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'], ordered=True)
week18['Day of Week']= week18['Day of Week'].astype(days)
week18=week18.sort_values('Day of Week')

week19 = a2019['Day'].value_counts()
week19=pd.DataFrame(week19)
week19['Day of Week'] = week19.index
week19=week19.rename(columns = {'Day':'Number of Cases'})
week19['Day of Week']= week19['Day of Week'].astype(days)
week19=week19.sort_values('Day of Week')

week20 = a2020['Day'].value_counts()
week20=pd.DataFrame(week20)
week20['Day of Week'] = week20.index
week20=week20.rename(columns = {'Day':'Number of Cases'})
week20['Day of Week']= week20['Day of Week'].astype(days)
week20=week20.sort_values('Day of Week')

week18['2019']=week19['Number of Cases']
week18['2020']=week20['Number of Cases']


# Line Graphs
import altair as alt
Lineas18=alt.Chart(week18).mark_line(color='red', opacity=0.6).encode(
    x=alt.X('Day of Week',title='Days Of The Week',axis=alt.Axis(labelAngle=0), sort=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']),
    y=alt.Y('2018',title='Crimes Per Year'),
    )
Puntos18=alt.Chart(week18).mark_circle(color='red', size=70).encode(
    x=alt.X('Day of Week',title='Days Of The Week',axis=alt.Axis(labelAngle=0), sort=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']),
    y=alt.Y('2018'),tooltip=[alt.Tooltip('2018', title='Crimes in 2018',format=',')])
crimenes_2018=alt.layer(Lineas18,Puntos18)


Lineas19=alt.Chart(week18).mark_line(color='blue', opacity=0.6).encode(
    x=alt.X('Day of Week',title='Days Of The Week',axis=alt.Axis(labelAngle=0), sort=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']),
    y=alt.Y('2019',title='Crimes Per Year'))
Puntos19=alt.Chart(week18).mark_circle(color='blue', size=70).encode(
    x=alt.X('Day of Week',title='Days Of The Week',axis=alt.Axis(labelAngle=0), sort=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']),
    y=alt.Y('2019'),tooltip=[alt.Tooltip('2019', title='Crimes in 2019',format=',')])
crimenes_2019=alt.layer(Lineas19,Puntos19)


Lineas20=alt.Chart(week18).mark_line(color='green', opacity=0.6).encode(
    x=alt.X('Day of Week',title='Days Of The Week',axis=alt.Axis(labelAngle=0), sort=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']),
    y=alt.Y('2020',title='Crimes Per Year'))
Puntos20=alt.Chart(week18).mark_circle(color='green', size=70).encode(
    x=alt.X('Day of Week',title='Days Of The Week',axis=alt.Axis(labelAngle=0), sort=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']),
    y=alt.Y('2020'),tooltip=[alt.Tooltip('2020', title='Crimes in 2020',format=',')])
crimenes_2020=alt.layer(Lineas20,Puntos20)
Lineas=alt.layer(crimenes_2018,crimenes_2019,crimenes_2020)

st.markdown('### CRIMES PER DAY OF THE WEEK 2018-2020')
c1, c2 = st.columns((7,3))
with c1:
    st.altair_chart(Lineas, use_container_width=True)

with c2:
    week18=week18.drop('Day of Week', axis=1)
    st.dataframe(week18)


# python -m streamlit run actividad_integradora.py
